named entity transliteration with comparable corpora .
abstract .
in this paper we investigate chinese- english name transliteration using comparable corpora , corpora where texts in the two languages deal in some of the same topics and therefore share references to named entities but are not translations of each other .
we present two distinct methods for transliteration , one approach using phonetic transliteration , and the second using the temporal distribution of candidate pairs .
each of these approaches works quite well , but by combining the approaches one can achieve even better results .
we then propose a novel score propagation method that utilizes the co-occurrence of transliteration pairs within document pairs .
this propagation method achieves further improvement over the best results from the previous step .
introduction .
as part of a more general project on multilingual named entity identification , we are interested in the problem of name transliteration across languages that use different scripts .
one particular issue is the discovery of named entities in comparable texts in multiple languages , where by comparable we mean texts that are about the same topic , but are not in general translations of each other .
for example , if one were to go through an english , chinese and arabic newspaper on the same day , it is likely that the more important international events in various topics such as politics , business , science and sports , would each be covered in each of the newspapers .
names of the same persons , locations and so forth which are often transliterated rather than translated would be found in comparable stories across the three papers .
we wish to use this expectation to leverage transliteration , and thus the identification of named entities across languages .
our idea is that the occurrence of a cluster of names in , say , an english text , should be useful if we find a cluster of what looks like the same names in a chinese or arabic text .
an example of what we are referring to can be found in figure 1 .
these are fragments of two stories from the june 8 , 2001 xinhua english and chinese newswires , each covering an international womens badminton championship .
though these two stories are from the same newswire source , and cover the same event , they are not translations of each other .
still , not surprisingly , a lot of the names that occur in one , also occur in the other .
thus ( camilla ) martin shows up in the chinese version .
several other correspondences also occur .
while some of the transliterations are standard thus martin is conventionally transliterated as a i ' 1 : ma-erting many of them were clearly more novel , though all of them follow the standard chinese conventions for transliterating foreign names .
these sample documents illustrate an important point : if a document in language l1 has a set of names , and one finds a document in l2 containing a set of names that look as if they could be transliterations of the names in the l1 document , then this should boost ones confidence that the two sets of names are indeed transliterations of each other .
we will demonstrate that this intuition is correct . 1many names , particularly of organizations , maybe translated rather than transliterated ; the transliteration method we discuss here obviously will not account for such cases , though the time correlation and propagation methods we discuss will still be useful .
previous work .
in previous work on chinese named-entity transliteration e.g. ( meng et al. , 2001 ; gao et al. , 2004 ) , the problem has been cast as the problem of producing , for a given chinese name , an english equivalent such as one might need in a machine translation system .
common approaches include source- channel methods , following ( knight and graehl , 1998 ) or maximum-entropy models .
comparable corpora have been studied extensively in the literature ( e.g. , ( fung , 1995 ; rapp , 1995 ; tanaka and iwasaki , 1996 ; franz et al. , 1998 ; ballesteros and croft , 1998 ; masuichi et al. , 2000 ; sadat et al. , 2003 ) ) , but transliteration in the context of comparable corpora has not been well addressed .
the general idea of exploiting frequency correlations to acquire word translations from comparable corpora has been explored in several previous studies ( e.g. , ( fung , 1995 ; rapp , 1995 ; tanaka and iwasaki , 1996 ) ) .recently , a method based on pearson correlation was proposed to mine word pairs from comparable corpora ( tao and zhai , 2005 ) , an idea similar to the method used in ( kay and roscheisen , 1993 ) for sentence alignment .
in our work , we adopt the method proposed in ( tao and zhai , 2005 ) and apply it to the problem of transliteration .
we also study several variations of the similarity measures .
mining transliterations from multilingual web pages was studied in ( zhang and vines , 2004 ) ; our work differs from this work in that we use comparable corpora ( in particular , news data ) and leverage the time correlation information naturally available in comparable corpora .
chinese transliteration with comparable corpora .
we assume that we have comparable corpora , consisting of newspaper articles in english and chinese from the same day , or almost the same day .
in our experiments we use data from the english and chinese stories from the xinhua news agency for about 6 months of 2001 .
we assume that we have identified names for persons and locationstwo types that have a strong tendency to be transliterated wholly or mostly phoneticallyin the english text ; in this work we use the named-entity recognizer described in ( li et al. , 2004 ) , which is based on the snow machine learning toolkit ( carlson et al. , 1999 ) .
to perform the transliteration task , we propose the following general three-step approach : given an english name , identify candidate chinese character n-grams as possible transliterations .
score each candidate based on how likely the candidate is to be a transliteration of the english name .
we propose two different scoring methods .
the first involves phonetic scoring , and the second uses the frequency profile of the candidate pair over time .
we will show that each of these approaches works quite well , but by combining the approaches one can achieve even better results .
propagate scores of all the candidate transliteration pairs globally based on their co- occurrences in document pairs in the comparable corpora .
the intuition behind the third step is the following .
suppose several high-confidence name transliteration pairs occur in a pair of english and chinese documents .
intuitively , this would increase our confidence in the other plausible transliteration pairs in the same document pair .
we thus propose a score propagation method to allow these high-confidence pairs to propagate some of their scores to other co-occurring transliteration pairs .
as we will show later , such a propagation strategy can generally further improve the transliteration accuracy ; in particular , it can further improve the already high performance from combining the two scoring methods .
candidate selection .
the english named entity candidate selection process was already described above .
candidate chinese transliterations are generated by consulting a list of characters that are frequently used for transliterating foreign names .
as discussed elsewhere ( sproat et al. , 1996 ) , a subset of a few hundred characters ( out of several thousand ) tends to be used overwhelmingly for transliterating foreign names into chinese .
we use a list of 495 such characters , derived from various online dictionaries .
a sequence of three or more characters from the list is taken as a possible name .
if the character occurs , which is frequently used to represent the space between parts of an english name , then at least one character to the left and right of this character will be collected , even if the character in question is not in the list of foreign characters .
armed with the english and chinese candidate lists , we then consider the pairing of every english candidate with every chinese candidate .
obviously it would be impractical to do this for all of the candidates generated for , say , an entire year : we consider as plausible pairings those candidates that occur within a day of each other in the two corpora .
candidate scoring based on pronunciation .
we adopt a source-channel model for scoring english-chinese transliteration pairs .
in general , we seek to estimate p ( elc ) , where e is a word in roman script , and c is a word in chinese script .
since chinese transliteration is mostly based on pronunciation , we estimate p ( e ^ | c ^ ) , where e ^ is the pronunciation of e and c ^ is the pronunciation of c .
again following standard practice , we decompose the estimate of p ( e ^ | c ^ ) as p ( e ^ | c ^ ) * p ( e ^ i | c ^ i ) .
here , e ^ i is the ith subsequence of the english phone string , and c ^ i is the ith subsequence of the chinese phone string .
since chinese transliteration attempts to match the syllable- sized characters to equivalent sounding spans of the english language , we fix the c ^ i to be syllables , and let the e ^ i range over all possible subsequences of the english phone string .
for training data we have a small list of 721 names in roman script and their chinese equivalent.3 pronunciations for english words are obtained using the festival text-tospeech system ( taylor et al. , 1998 ) ; for chinese , we use the standard pinyin transliteration of the characters .
english-chinese pairs in our training dictionary were aligned using the alignment algorithm from ( kruskal , 1999 ) , and a hand-derived set of 21 rules-of-thumb : for example , we have rules that encode the fact that chinese / l / can correspond to english / r / , / n / or / er / ; and that chinese / w / may be used to represent / v / .
given that there are over 400 syllables in mandarin ( not counting tone ) and each of these syllables can match a large number of potential english phone spans , this is clearly not enough training data to cover all the parameters , and so we use good-turing estimation to estimate probabilities for unseen correspondences .
since we would like to filter implausible transliteration pairs we are less lenient than standard estimation techniques in that we are willing to assign zero probability to some correspondences .
thus we set a hard rule that for an english phone span to correspond to a chinese syllable , the initial phone of the english span must have been seen in the training data as corresponding to the initial of the chinese syllable some minimum number of times .
for consonant-initial syllables we set the minimum to 4 .
we omit further details of our estimation technique for lack of space .
this phonetic correspondence model can then be used to score putative transliteration pairs .
candidate scoring based on frequency correlation .
names of the same entity that occur in different languages often have correlated frequency patterns due to common triggers such as a major event .
thus if we have comparable news articles over a sufficiently long time period , it is possible to exploit such correlations to learn the associations of names in different languages .
the idea of exploiting frequency correlation has been well studied . ( see the previous work section . )
we adopt the method proposed in ( tao and zhai , 2005 ) , which 3the ldc provides a much larger list of transliterated chinese-english names , but we did not use this here for two reasons .
first , we have found it it be quite noisy .
secondly , we were interested in seeing how well one could do with a limited resource ofjust a few hundred names , which is a more realistic scenario for languages that have fewer resources than english and chinese .
we pool all documents in a single day to form a large pseudo-document .
then , for each transliteration candidate ( both chinese and english ) , we compute its frequency in each of those pseudo-documents and obtain a raw frequency vector .
we further normalize the raw frequency vector so that it becomes a frequency distribution over all the time points ( days ) .
in order to compute the similarity between two distribution vectors , the pearson correlation coefficient was used in ( tao and zhai , 2005 ) ; here we also considered two other commonly used measures cosine ( salton and mcgill , 1983 ) , and jensen-shannon divergence ( lin , 1991 ) , though our results show that pearson correlation coefficient performs better than these two other methods .
score propagation .
in both scoring methods described above , scoring of each candidate transliteration pair is independent of the other .
as we have noted , document pairs that contain lots of plausible transliteration pairs should be viewed as more plausible document pairs ; at the same time , in such a situation we should also trust the putative transliteration pairs more .
thus these document pairs and transliteration pairs mutually reinforce each other , and this can be exploited to further optimize our transliteration scores by allowing transliteration pairs to propagate their scores to each other according to their co-occurrence strengths .
formally , suppose the current generation of transliteration scores are ( ei , ci , wi ) i = 1 , ... , n , where ( ei , ci ) is a distinct pair of english and chinese names .
note that although for any i = ~ j , we have ( ei , ci ) = ~ ( ej , cj ) , it is possible that ei = ej or ci = cj for some i = ~ j. wi is the transliteration score of ( ei , ci ) .
these pairs along with their co-occurrence relation computed based on our comparable corpora can be formally represented by a graph as shown in figure 2 .
in such a graph , a node represents ( ei , ci , wi ) .
an edge between ( ei , ci , wi ) and ( ej , cj , wj ) is constructed iff ( ei , ci ) and ( ej , cj ) co-occur in a certain document pair ( et , ct ) , i.e. there exists a document pair ( et , ct ) , such that ei , ej e et and ci , cj e ct .
given a node ( ei , ci , wi ) , we refer to all its directly-connected nodes as its neighbors .
the documents do not appear explicitly in the graph , but they implicitly affect the graphs topology and the weight of each edge .
our idea of score propagation can now be formulated as the following recursive equation for figure 2 : graph representing transliteration pairs and cooccurence relations .
mi ( i , j ) is the mutual information of ( ei , ci ) and ( ej , cj ) .
as we will show , the co method works better .
note that the transition probabilities between indirect neighbors are always 0 .
thus propagation only happens between direct neighbors .
this formulation is very similar to pagerank , a link-based ranking algorithm for web retrieval ( brin and page , 1998 ) .
however , our motivation is propagating scores to exploit cooccurrences , so we do not necessarily want the equation to converge .
indeed , our results show that although the initial iterations always help improve accuracy , too many iterations actually would decrease the performance .
evaluation .
we use a comparable english-chinese corpus to evaluate our methods for chinese transliteration .
we take one days worth of comparable news articles ( 234 chinese stories and 322 english stories ) , generate about 600 english names with the entity recognizer ( li et al. , 2004 ) as described above , and find potential chinese transliterations also as previously described .
we generated 627 chinese candidates .
in principle , all these 600 x 627 pairs are potential transliterations .
we then apply the phonetic and time correlation methods to score and rank all the candidate chinese-english correspondences .
to evaluate the proposed transliteration methods quantitatively , we measure the accuracy of the ranked list by mean reciprocal rank ( mrr ) , a measure commonly used in information retrieval when there is precisely one correct answer ( kantor and voorhees , 2000 ) .
the reciprocal rank is the reciprocal of the rank of the correct answer .
for example , if the correct answer is ranked as the first , the reciprocal rank would be 1.0 , whereas if it is ranked the second , it would be 0.5 , and so forth .
to evaluate the results for a set of english names , we take the mean of the reciprocal rank of each english name .
we attempted to create a complete set of answers for all the english names in our test set , but a small number of english names do not seem to have any standard transliteration according to the resources that we consulted .
we ended up with a list of about 490 out of the 600 english names judged .
we further notice that some answers ( about 20 % ) are not in our chinese candidate set .
this could be due to two reasons : ( 1 ) the answer does not occur in the chinese news articles we look at .
( 2 ) the answer is there , but our candidate generation method has missed it .
in order to see more clearly how accurate each method is for ranking the candidates , we also compute the mrr for the subset of english names whose transliteration answers are in our candidate list .
we distinguish the mrrs computed on these two sets of english names as allmrr and coremrr .
below we first discuss the results of each of the two methods .
we then compare the two methods and discuss results from combining the two methods .
phonetic correspondence .
we show sample results for the phonetic scoring method in table 1 .
this table shows the 10 highest scoring transliterations for each chinese character sequence based on all texts in the chinese and english xinhua newswire for the 13th of august , 2001 .
frequency correlation .
we proposed three similarity measures for the frequency correlation method , i.e. , the cosine , pearson coefficient , and jensen-shannon divergence .
in table 2 , we show their mrrs .
given that the only resource the method needs is comparable text documents over a sufficiently long period , these results are quite encouraging .
for example , with pearson correlation , when the chinese transliteration of an english name is included in our candidate list , the correct answer is , on average , ranked at the 3rd place or better .
the results thus show that the idea of exploiting frequency correlation does work .
we also see that among the three similarity measures , pearson correlation performs the best ; it performs better than cosine , which is better than js-divergence .
compared with the phonetic correspondence method , the performance of the frequency correlation method is in general much worse , which is not surprising , given the fact that terms may be correlated merely because they are topically related .
combination of phonetic correspondence and frequency correlation .
since the two methods exploit complementary resources , it is natural to see if we can improve performance by combining the two methods .
indeed , intuitively the best candidate is the one that has a good pronunciation alignment as well as a correlated frequency distribution with the english name .
we evaluated two strategies for combining the two methods .
the first strategy is to use the phonetic model to filter out ( clearly impossible ) candidates and then use the frequency correlation method to rank the candidates .
the second is to combine the scores of these two methods .
since the correlation coefficient has a maximum value of 1 , we normalize the phonetic correspondence score by dividing all scores by the maximum score so that the maximum normalized value is also 1 .
we then take the average of the two scores and rank the candidates based on their average scores .
note that the second strategy implies the application of the first strategy .
the results of these two combination strategies are shown in table 3 along with the results of the two individual methods .
we see that both combination strategies are effective and the mrrs of the combined results are all better than those of the two individual methods .
it is interesting to see that the benefit of applying the phonetic correspondence model as a filter is quite significant .
indeed , although the performance of the frequency correlation method alone is much worse than that of the phonetic correspondence method , when working on the subset of candidates passing the phonetic filter ( i.e. , those candidates that have a reasonable phonetic alignment with the english name ) , it can outperform the phonetic correspondence method .
this once again indicates that exploiting the frequency correlation can be effective .
when combining the scores of these two methods , we not only ( implicitly ) apply the phonetic filter , but also exploit the discriminative power provided by the phonetic correspondence scores and this is shown to bring in additional benefit , giving the best performance among all the methods .
error analysis .
from the results above , we see that the mrrs for the core english names are substantially higher than those for all the english names .
this means that our methods perform very well whenever we have the answer in our candidate list , but we have also missed the answers for many english names .
the missing of an answer in the candidate list is thus a major source of errors .
to further understand the upper bound of our method , we manually add the missing correct answers to our candidate set and apply all the methods to rank this augmented set of candidates .
the performance is reported in table 4 with the corresponding performance on the original candidate set .
we see that , as expected , the performance on the augmented candidate list , which can be interpreted as an upper bound of our method , is indeed much better , suggesting that if we can somehow improve the candidate generation method to include the answers in the list , we can expect to significantly improve the performance for all the methods .
this is clearly an interesting topic for further research .
the relative performance of different methods on this augmented candidate list is roughly the same as on the original candidate list , except that the freq + phoneticfilter is slightly worse than that of the phonetic method alone , though it is still much better than the performance of the frequency correlation alone .
one possible explanation may be that since these names do not necessarily occur in our comparable corpora , we may not have sufficient frequency observations for some of the names .
experiments on score propagation .
to demonstrate that score propagation can further help transliteration , we use the combination scores in table 3 as the initial scores , and apply our propagation algorithm to iteratively update them .
we remove the entries when they do not co-occur with others .
there are 25 such english name candidates .
thus , the initial scores are actually slightly different from the values in table 3 .
we show the new scores and the best propagation scores in table 5 .
in the table , init. refers to the initial scores. and co and mi stand for best scores obtained using either the co-occurrence or mutual information method .
while both methods result in gains , co very slightly outperforms the mi approach .
in the score propagation process , we introduce two additional parameters : the interpolation parameter a and the number of iterations k .
figure 3 and figure 4 show the effects of these parameters .
intuitively , we want to preserve the initial score of a pair , but add a slight boost from its neighbors .
thus , we set a very close to 1 ( 0.9 and 0.95 ) , and allow the system to perform 20 iterations .
in both figures , the first few iterations certainly leverage the transliteration , demonstrating that the propagation method works .
however , we observe that the performance drops when more iterations are used , presumably due to noise introduced from more distantly connected nodes .
thus , a relatively conservative approach is to choose a high a value , and run only a few iterations .
note , finally , that the co method seems to be more stable than the mi method .
conclusions and future work .
in this paper we have discussed the problem of chinese-english name transliteration as one component of a system to find matching names in comparable corpora .
we have proposed two methods for transliteration , one that is more traditional and based on phonetic correspondences , and one that is based on word distributions and adopts methods from information retrieval .
we have shown that both methods yield good results , and that even better results can be achieved by combining the methods .
we have further showed that one can improve upon the combined model by using reinforcement via score propagation when transliteration pairs cluster together in document pairs .
the work we report is ongoing .
we are investigating transliterations among several language pairs , and are extending these methods to korean , arabic , russian and hindi see ( tao et al. , 2006 ) .
